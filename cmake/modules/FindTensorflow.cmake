find_file(scram_path "scram")
if(scram_path)
    execute_process(COMMAND scram tool info tensorflow-cc OUTPUT_VARIABLE SCRAM_TF_INFO)
    string(REGEX MATCH "\nINCLUDE=([^\n]*)" TF_STR ${SCRAM_TF_INFO})
    set(Tensorflow_INCLUDE_DIRS "${CMAKE_MATCH_1}")
    string(REGEX MATCH "\nLIBDIR=([^\n]*)" TF_STR ${SCRAM_TF_INFO})
    set(Tensorflow_LIBRARY_DIRS "${CMAKE_MATCH_1}")

    #set(Tensorflow_LIBRARIES)
    #foreach(comp ${Tensorflow_FIND_COMPONENTS})
    #    find_library(Boost_${comp}_LIBRARY "boost_${comp}" PATHS ${Tensorflow_LIBRARY_DIRS} NO_DEFAULT_PATH)
    #    if(Boost_${comp}_LIBRARY)
    #        list(APPEND Boost_LIBRARIES ${Boost_${comp}_LIBRARY})
    #        list(REMOVE_ITEM BoostEx_FIND_COMPONENTS ${comp})
    #    elseif(Boost_FIND_REQUIRED_${comp})
    #        message(FATAL_ERROR "Unable to find the requested Boost library 'boost_${comp}'.")
    #    endif()
    #endforeach()
else()
    #find_package(Boost REQUIRED COMPONENTS ${BoostEx_FIND_COMPONENTS})
endif()
